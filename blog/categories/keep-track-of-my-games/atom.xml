<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Keep Track of My Games | Kamranicus]]></title>
  <link href="http://kamranicus.com/blog/categories/keep-track-of-my-games/atom.xml" rel="self"/>
  <link href="http://kamranicus.com/"/>
  <updated>2016-02-09T04:02:58+00:00</updated>
  <id>http://kamranicus.com/</id>
  <author>
    <name><![CDATA[Kamran]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Impersonating a User During Automated Testing Scenarios]]></title>
    <link href="http://kamranicus.com/blog/2015/11/06/impersonating-during-testing/"/>
    <updated>2015-11-06T16:00:00+00:00</updated>
    <id>http://kamranicus.com/blog/2015/11/06/impersonating-during-testing</id>
    <content type="html"><![CDATA[<p>I&rsquo;m starting to introduce privacy controls to <a href="http://keeptrackofmygames.com">Keep Track of My Games</a> and I ran into the following scenario when writing my tests:</p>

<p>```
Scenario: Anonymous user should be able to view a public custom list</p>

<pre><code>Given a user has a list
And a user's list is public
When I request access to the list
Then I have read-only access
</code></pre>

<p>```</p>

<p>In this context, <strong>I</strong> am the anonymous user. This is the exact <a href="http://www.specflow.org/">SpecFlow</a> scenario I wrote. Do you know why I may have run into issues?</p>

<p>Let&rsquo;s look at the first two steps:</p>

<p>```c#
[Given(@&ldquo;a user has a list&rdquo;)]
public void GivenAUserHasAList() {</p>

<pre><code>_listResult = _context.ListService.CreateList(_newList)
</code></pre>

<p>}</p>

<p>[Given(@&ldquo;a user&rsquo;s list is public&rdquo;)]
public void GivenAUsersListIsPublic() {
  <em>privacySettings.Level = PrivacyLevel.Public;
  </em>context.ListService.UpdateListPrivacy(<em>listResult.Id, </em>privacySettings);
}
```</p>

<p>Why would this cause a problem with my given scenario?</p>

<ol>
<li>In the first step, I&rsquo;m creating a new list.</li>
<li>In the second step, I&rsquo;m taking the new list I just made from the first step and updating the privacy settings on it.</li>
</ol>


<p>The problem is that my service assumes the context is an authenticated user and will apply changes to the <strong>current user&rsquo;s</strong> list. Well, since I did not call my login helpers before these two steps, I am in an anonymous context so the service calls fail. That&rsquo;s good! But how can I tell my steps to call a service method <em>on behalf</em> of another user without having <em>every</em> step use the current user context?</p>

<p>You might say I should just create a new method that accepts a username and refactor my methods. I <em>could</em> do that but not only is my entire service designed around the current user context, my service layer is essentially the interface of my public API. I would never allow one user to create a list for another user (unless that was a feature). So the same way I wouldn&rsquo;t expose an API method to do something on behalf of someone, I won&rsquo;t add a public method in my service layer to do the same. I could choose to make the method private or internal and grant access to the assembly for testing&mdash;true, I <em>could</em> but that seems like a workaround where I need to expose special functionality just for testing.</p>

<p>The approach I ended up doing was simpler and more elegant and leveraged an existing pattern I was relying on: injecting an <code>IUserContext</code> into my service layer like this:</p>

<p><code>c#
public ListService(IUserContext userContext) {
  _userContext = userContext;
}
</code></p>

<p>This is using standard dependency injection (Ninject, in my case) to inject a context for the current user. That context gets created and maintained outside this class, so it doesn&rsquo;t care who provided it or where it came from, it just uses it to determine business logic.</p>

<p>So since I&rsquo;m already injecting the current user context and mocking it in my tests, why not simply swap out the context when I need to?</p>

<h2>Creating an impersonation context</h2>

<p>That&rsquo;s what I ended up doing. Here&rsquo;s my implementation of a <code>TestingImpersonationContext</code> (<a href="https://gist.github.com/kamranayub/9654d6581fbcf63cf481">https://gist.github.com/kamranayub/9654d6581fbcf63cf481</a>):</p>

<script src="https://gist.github.com/kamranayub/9654d6581fbcf63cf481.js"></script>


<p>It should be clear what&rsquo;s happening but let me explain further. Specifically in SpecFlow you can inject a context into your testing steps like so:</p>

<p>```c#
public class StepBase : TechTalk.SpecFlow.Steps {</p>

<pre><code>protected TestingContext _context;
public StepBase(TestingContext context)
{
    _context = context;
}
</code></pre>

<p>}
```</p>

<p>As long as your step classes inherit that <code>StepBase</code>, you have access to a context. All I did was build a method off that context that swapped out my existing dependency that was injected for <code>IUserContext</code> with a temporary context that impersonated the requested user. Once it is disposed, it restores the original context. Easy as pie!</p>

<p>If you are <strong>not</strong> using SpecFlow which is probably the case, don&rsquo;t fret&mdash;all you really need is a class or helper method that you can access in your test classes. However you want to achieve that is up to you. Create a base class, don&rsquo;t even bother with dependency injection, etc. This is entirely doable without DI but since my app relies on it I also leverage it during testing.</p>

<p>Now given we have an impersonation context helper, here&rsquo;s how our two testing steps have changed:</p>

<p>```c#
[Given(@&ldquo;a user has a list&rdquo;)]
public void GivenAUserHasAList() {
  using (_context.Impersonate(&ldquo;user&rdquo;) {</p>

<pre><code>_listResult = _context.ListService.CreateList(_newList);
</code></pre>

<p>  }
}</p>

<p>[Given(@&ldquo;a user&rsquo;s list is public&rdquo;)]
public void GivenAUsersListIsPublic() {</p>

<pre><code>using (_context.Impersonate("user"))
{
    _privacySettings.Level = PrivacyLevel.Public;
    _context.ListService.UpdateListPrivacy(_listResult.Id, _privacySettings);
}
</code></pre>

<p>}
```</p>

<p>I could even update my scenario to be specific about <strong>who&rsquo;s list</strong> I&rsquo;m accessing (so it&rsquo;s not ambiguous between logged in user vs. another user) but since I only have two users in my testing context, it doesn&rsquo;t really matter.</p>

<p>Now for the test results:</p>

<p><code>
Given a user has a list
-&gt; done: ListSteps.GivenAUserHasAList() (0.2s)
And a user's list is public
-&gt; done: ListSteps.GivenAUsersListIsPublic() (0.0s)
When I request access to the list
-&gt; done: ListSteps.WhenIRequestAccessToTheList() (0.1s)
Then I have read-only access
-&gt; done: ListSteps.ThenIHaveReadAccess() (0.0s)
</code></p>

<p>The tests are green and now I&rsquo;m a happy coder. By the way, if you aren&rsquo;t using <a href="http://specflow.org">SpecFlow</a> for .NET you should consider it, I love it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Azure CDN Origin Pull With Cassette]]></title>
    <link href="http://kamranicus.com/blog/2015/10/10/azure-cdn-cassette/"/>
    <updated>2015-10-10T00:30:00+00:00</updated>
    <id>http://kamranicus.com/blog/2015/10/10/azure-cdn-cassette</id>
    <content type="html"><![CDATA[<p>For the October update for <a href="http://keeptrackofmygames.com">Keep Track of My Games</a> I wanted to offload my web assets to a CDN. Since I&rsquo;m already using <a href="http://azure.com">Microsoft Azure</a> to host the site, I decided to use <a href="https://azure.microsoft.com/en-us/services/cdn/">Azure CDN</a>.</p>

<p>I set it up for &ldquo;Origin Pull&rdquo; which means that instead of uploading my assets to the CDN (Azure Blob storage), you request a file from the CDN and Azure will go and get it from your website and then cache it on their servers.</p>

<p>So as an example:</p>

<p><code>
User requests http://az888888.vo.msecnd.net/stylesheets/foo.png
|
|
CDN: have I cached "stylesheets/foo.png?"
  Yes: Serve content from edge cache (closest to user)
  No: Request http://yourwebsites.com/stylesheets/foo.png and serve
</code></p>

<p>You can read more about <a href="https://azure.microsoft.com/en-us/documentation/articles/cdn-create-new-endpoint/">how to set up origin pull in Azure CDN</a>. In my case, I used &ldquo;Custom Origin&rdquo; of &ldquo;<a href="http://keeptrackofmygames.com">http://keeptrackofmygames.com</a>&rdquo;.</p>

<h2>Using CDN with Cassette</h2>

<p>I use the .NET library <a href="http://getcassette.com">Cassette</a> for bundling &amp; minification for KTOMG&mdash;when I started KTOMG there was no Microsoft provided option and Cassette has been really stable.</p>

<p>It works pretty much as you&rsquo;d expect:</p>

<ul>
<li>Define &ldquo;bundles&rdquo; which are sets of scripts/stylesheets</li>
<li>Render bundles onto page(s)</li>
<li>If debug mode, render individually otherwise minify and concatenate</li>
</ul>


<p>By default, Cassette will render URLs like this in your source code:</p>

<p>In debug mode:</p>

<p>```
Bundle: ~/Content/core</p>

<ul>
<li>/cassette.axd/asset/Content/bootstrap.css?hash</li>
<li>/cassette.axd/asset/Content/site.css?hash</li>
<li>/cassette.axd/asset/Content/app.css?hash
```</li>
</ul>


<p>And in production:</p>

<p><code>
/cassette.axd/stylesheet/{hash}/Content/core
</code></p>

<p>But if we want to serve assets over the CDN, we need to plug in our special CDN URL prefix&mdash;not only for script/stylesheet references but also references to images <em>in</em> those files.</p>

<p>Luckily, Cassette provides a facility to modify generated URLs by letting you register a <code>IUrlGenerator</code>. Here&rsquo;s my full implementation of this for my CDN:</p>

<script src="https://gist.github.com/kamranayub/2da4ccfec3e7812c8367.js"></script>


<p>As you can see, I register a custom <code>IUrlGenerator</code> and a custom <code>IUrlModifier</code>. The default <code>IUrlModifider</code> is Cassette&rsquo;s <code>VirtualDirectoryPrepender</code> and it just prepends &ldquo;/&rdquo; to the beginning of every URL but in our case we want to conditionally prepend the Azure CDN endpoint in production.</p>

<p>In production, this will produce the following output:</p>

<p><code>
https://az99999.vo.msecnd.net/cassette.axd/stylesheet/{hash}/Content/core
</code></p>

<p>To allow local debugging and CDN in production I just use an app setting in the web.config. In Azure, I also add an application setting (<code>CdnUrl</code>) through the portal in my production slot with the correct CDN URL and voila&mdash;all my assets will now be served over CDN.</p>

<h3>Notes</h3>

<ul>
<li><p>Azure CDN does not yet support HTTPS for custom origin domains. So if you want to serve content over <a href="http://static.yoursite.com">http://static.yoursite.com</a> you can&rsquo;t serve it over HTTPS because Azure doesn&rsquo;t allow you to upload or set a SSL certificate to use and insteads uses their own certificate which is not valid for your domain. <a href="http://feedback.azure.com/forums/169397-cdn/suggestions/1332683-allow-https-for-custom-cdn-domain-names">Vote up the UserVoice issue</a> on this.</p></li>
<li><p>Azure CDN origin pull does not seem to respect <code>Cache-Control: private</code> HTTP header. For example, by default MVC serves pages with private cache control which means browsers won&rsquo;t cache that page and neither <em>should</em> Azure CDN&mdash;but it does anyway. In my case, I really don&rsquo;t want a true mirror of my site, I just wants assets served over CDN and Cassette sets <code>Cache-Control: public</code> on them automatically. <a href="http://feedback.azure.com/forums/169397-cdn/suggestions/10148280-respect-cache-control-private-for-origin-pull">You can upvote my feature request on UserVoice</a>.</p></li>
<li><p>I am choosing <strong>not</strong> to point my entire domain to the CDN. Some folks choose to serve their entire site over the CDN which is definitely something you can do. However, in my case, I didn&rsquo;t want to do that. If you instead chose to point your domain to the CDN endpoint, you don&rsquo;t need to do any of this&mdash;<strong>everything</strong> will be served over the CDN.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Behind the Major Update to Keep Track of My Games]]></title>
    <link href="http://kamranicus.com/blog/2015/05/30/ktomg-update/"/>
    <updated>2015-05-30T22:13:00+00:00</updated>
    <id>http://kamranicus.com/blog/2015/05/30/ktomg-update</id>
    <content type="html"><![CDATA[<p><img src="https://cloud.githubusercontent.com/assets/563819/7899619/b3154994-072a-11e5-8da1-b9a9703a8b57.png" alt="My profile" /></p>

<p>Today I just pushed a <strong>major</strong> update to <a href="http://keeptrackofmygames.com">KTOMG</a>. <em>Psst, you should join!</em></p>

<p>You can <a href="http://blog.keeptrackofmygames.com/post/120264549011/updates-for-may-2015">reference the blog post</a> for details on features but on the technical side I&rsquo;m pretty proud because I got to implement a bunch of new tech that I&rsquo;ve been wanting to learn properly.</p>

<!-- More -->


<h2>At a glance</h2>

<p>The site is built using <a href="http://getbootstrap.com">Bootstrap</a>, <a href="http://lesscss.org">LESS</a>, and <a href="http://knockoutjs.com">Knockout.js</a>. It is totally responsive and yes, every feature is available on every view. I don&rsquo;t yet have offline mode or some more app-y things like local storage quite yet but it&rsquo;s on my to-do list. By far the hardest thing to make responsive was the list view but using Flexbox and toolbar configurations, it&rsquo;s manageable. It could always be simpler though, my work is never done.</p>

<h2>CSS3 Flexbox</h2>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7899652/94500830-072c-11e5-8656-59fb097ecf36.png" alt="Lists" /></p>

<p>The list view is using <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS3 Flexbox</a> with <code>display: table</code> fallback w/JavaScript. A Flexbox grid is perfect for a modern responsive app, which KTOMG is. It scales down to mobile fine (and if you don&rsquo;t have Flexbox or if the fallback fails, the worst you get is a stacked list). For different breakpoints I customize the flex basis of the items to create 1-3 column layouts. The homepage will soon use Flexbox as soon as I get to it (right now it&rsquo;s using <code>display: table</code> to maintain equal-height columns). All of the modern browsers support Flexbox and for those that don&rsquo;t, they just get a wrapping grid.</p>

<p>I also use Flexbox for any grid of games using table display as a fallback; this prevents me from needing to have fixed column sizes for different screen sizes so the games will just wrap as they need to.</p>

<p><strong>Aside:</strong> The box art image grid for the list is simply just the first four games in the list (dynamically updated, since the entire page uses Knockout) positioned using <code>background-size</code> and <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_multiple_backgrounds">multiple backgrounds</a>. It uses a placeholder image repeated 4 times, in case the games are missing artwork and during loading.</p>

<p>Most of the CSS3/HTML5 stuff I have fallbacks by detecting features using <a href="http://modernizr.com/">Modernizr</a>.</p>

<h2>HTML5 Drag and Drop</h2>

<p>The other cool thing Flexbox gives you is some hot drag and drop action by allowing dynamic insertion of flex items:</p>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7899631/1b7db50c-072b-11e5-9977-49c7b6c3b176.gif" alt="Drag and drop" /></p>

<p>I wrote the drag and drop code in vanilla HTML5 Javascript, it wasn&rsquo;t too bad <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_and_drop">using MDN as a guide</a>. The fallback if that isn&rsquo;t supported is simply toolbar icons (which really is faster anyway for moving things far).</p>

<p>I admit I haven&rsquo;t tried a browser that <em>doesn&rsquo;t</em> support Flexbox but <em>does</em> support drag/drop, so that case might still need some tweaking.</p>

<h2>Hopscotch Tutorials</h2>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7899658/bda3d91e-072c-11e5-80ea-932d2f309681.png" alt="Tutorials" /></p>

<p>Since lists are pretty powerful, people might need some help remembering all the things they can do.</p>

<p>I use a modified version of <a href="http://linkedin.github.io/hopscotch">Hopscotch</a> for an introduction tutorial. I struggled at first to figure out how I wanted to do tutorials. I ended up just using a string array on every user that I fill in when they finish a tutorial, allowing for an infinite number of tutorials and everyone not seeing them by default. I keep a master list of valid tutorials on the server.</p>

<p>It&rsquo;s a simple solution that will let me add tutorials as I can make them. It took me a little finnagling, but I also got the tour working fine on small screens.</p>

<h2>Stats with Chart.js</h2>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7899666/222e5d5a-072d-11e5-9328-f52ae59c9e76.png" alt="Stats" /></p>

<p>I use <a href="http://www.chartjs.org/">Chart.js</a> for profile and list stats. The API is easy to use and easy to extend, as well as being sufficiently sexy. The stats I show right now are just the tip of the iceberg. I look forward to generating some cool charts later on (especially the Radar ones for comparisons).</p>

<p>Also, I apparently really like Action/Adventure and RPGs. But I knew that already, tell me something I don&rsquo;t know! Like maybe my &ldquo;burndown&rdquo; for finishing my backlog&hellip;</p>

<h2>I&rsquo;m excited</h2>

<p>I worked on this update all month as my wife will attest. I still have <a href="ktomg.uservoice.com/">plenty</a> to do but <a href="http://kamranicus.com/blog/2015/05/21/5-things-for-6-months-abroad/">our vacation</a> is coming to an end. I don&rsquo;t think I&rsquo;ll be able to release such massive updates each month but this one definitely gets me closer to completing the vision I have. I&rsquo;m pretty excited! The updates are just in time for the big gaming conferences, if only I could get public lists out by the end of June&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Knockout.js Binding Report for Performance Tuning]]></title>
    <link href="http://kamranicus.com/blog/2015/05/25/knockout-binding-report/"/>
    <updated>2015-05-25T10:30:00+00:00</updated>
    <id>http://kamranicus.com/blog/2015/05/25/knockout-binding-report</id>
    <content type="html"><![CDATA[<p>I use a lot of <a href="http://knockoutjs.com">Knockout.js</a> on <a href="http://keeptrackofmygames.com">Keep Track of My Games</a>. I love Knockout but sometimes it makes it difficult to understand what&rsquo;s slowing my page down.</p>

<!-- More -->


<p>For the game list, there&rsquo;s a lot of binding going on because I have to bind not only the list of games but also the toolbar.</p>

<p><img src="http://41.media.tumblr.com/fefa8f95951ed13a2f4d22e758bb807b/tumblr_inline_nonu62Tr1J1qlpzxk_540.png" alt="KTOMG list" /></p>

<p>Before I deploy the newest update (shown above), I&rsquo;d prefer it if the list binding performance was better than it is now. Currently there&rsquo;s a visible block on the UI thread when returning results from the API, about 500-1000ms. <strong>This is unacceptable.</strong></p>

<p>A quick Google search did not yield anything regarding a &ldquo;real&rdquo; performance tool for Knockout. What I would love is an extension that would overlay performance statistics over the UI of my app after binding is complete. This way I could visualize and easily pinpoint what bindings are causing performance issues.</p>

<p>I&rsquo;ve made a small step towards that dream by creating a simple reporting script that outputs a &ldquo;binding report&rdquo; to the Chrome console:</p>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7795861/5a10389a-02d9-11e5-9462-056fa9e4da18.png" alt="Binding report" /></p>

<p>The report displays the total duration of the binding process (which is all bindings that occur after a 500ms wait time) as well as the top binding according to total duration.</p>

<p>It also displays each binding summary in a table (<code>console.table</code>). You can drill-down by expanding the array entries underneath the table (sorted by duration).</p>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7795969/8fb1c828-02da-11e5-8b81-fe88f466812e.png" alt="Drill-down" /></p>

<p>The script works by wrapping all the binding handlers (even custom ones) in a wrapper function that calculates the duration of the call to <code>init</code> or <code>update</code>. You just need to include it after your custom binding handlers and before the <code>applyBindings</code> call.</p>

<p>The script requires <a href="http://underscorejs.org">Underscore</a> and Google Chrome. Here&rsquo;s the gist:</p>

<script src="https://gist.github.com/kamranayub/65399fa247a6c182bc65.js"></script>


<p>As you can see in my own performance report, I have some work to do to fix my <code>if</code> bindings. It doesn&rsquo;t exactly pinpoint the problem binding, but it gets me a step closer to understanding what&rsquo;s going on.</p>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7796086/f407dc76-02db-11e5-90e7-b89613408174.png" alt="Uh oh" /></p>

<p>Now if you&rsquo;ll execuse me, I&rsquo;ve got some work to do.</p>

<p><strong>Update:</strong> Using this little script, I was able to get down to &lt;150ms from 600-900ms (and this is a slow laptop). This is much more acceptable for a release this week!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use a Separate Chrome Profile to Manage Your Apps]]></title>
    <link href="http://kamranicus.com/blog/2015/05/21/chrome-multi-user/"/>
    <updated>2015-05-21T13:45:00+00:00</updated>
    <id>http://kamranicus.com/blog/2015/05/21/chrome-multi-user</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re an app or site developer, you&rsquo;ve probably got a bunch of
tabs or bookmarks for your dashboards, social network accounts,
blog, and more. For <a href="http://keeptrackofmygames.com">Keep Track of My Games</a>,
I have UserVoice, Azure, RavenDB, social profiles, etc. that I
need to manage and track (haha).</p>

<!-- More -->


<p>It can be a chore to manage all of this easily but I have a tip.
A little while back Chrome <a href="https://support.google.com/chrome/answer/2364824?hl=en">introduced a new feature</a> that lets
you switch between multiple profiles super easily. I use it
for me and my wife, since she has a Google account and goes
to knitting sites and does whatever she likes doing&mdash;I don&rsquo;t want that filth in <em>my</em> Chrome instance! :)</p>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7749041/784a45e2-ffca-11e4-8a5f-ce5d1c445d4e.png" alt="Chrome user switcher is in the corner" /></p>

<p>The user switcher is in the top-right of Chrome, shown above. You can single-click to bring up a modal or right-click to quickly switch.
Chrome profiles are kept separate, with their own settings, extensions,
and bookmarks. This keeps tabs and work separated neatly and creates a
so-called &ldquo;separation of concerns&rdquo; for your browsing.</p>

<p>Here&rsquo;s the rub: A full Chrome user is tied to a Google account. I don&rsquo;t want to create a separate Google account just for KTOMG.
The Google+, YouTube, email, etc. is all linked to my primary Google Account.
The issue is, Chrome will not let more than one
Google account exist on a single PC. So how can we take advantage of the profile separation but still
keep my primary Google account?</p>

<p>The answer is: we&rsquo;ll create a
<a href="https://support.google.com/chrome/answer/3463947">Supervised User Account</a>. Did you notice I said &ldquo;full user&rdquo; before?
A SUA is just a lower privilege profile (meant for children) that you can
control via your primary Google account. BUT, if you <strong>don&rsquo;t restrict anything</strong>,
it&rsquo;ll just be like a &ldquo;full&rdquo; profile!</p>

<p>We&rsquo;ll follow the instructions above in the Google help article:</p>

<ol>
<li>Under your Chrome profile, go to Settings</li>
<li>Scroll down to Users</li>
<li>Click &ldquo;Add User&rdquo; and enter your app&rsquo;s name and avatar for a picture</li>
<li>Click &ldquo;Control and view websites this person visits from [your Google account]&rdquo;</li>
</ol>


<p><img src="https://cloud.githubusercontent.com/assets/563819/7749183/8dd90398-ffcb-11e4-8f8a-095f4a2e4beb.png" alt="Supervised user" /></p>

<p>Now you&rsquo;ve made a &ldquo;supervised&rdquo; app account managed by your main Google one. Nice! You can set up all your tabs as you want, <del>extensions with any
specific accounts (TweetDeck)</del>, and pinned dashboard tabs, all within a separate context from your primary Chrome profile. <strong>Update:</strong> It appears, after I tried, that SUA&rsquo;s cannot use extensions. There&rsquo;s an <a href="https://code.google.com/p/chromium/issues/detail?id=354178">open issue</a> for it, so hopefully whitelist ability will be added soon.</p>

<p>For example, here&rsquo;s what <a href="http://keeptrackofmygames.com">Keep Track of My Games</a>
looks like in its own Chrome profile:</p>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7749251/1de36eb0-ffcc-11e4-8be9-fa78b45a69da.png" alt="KTOMG profile" /></p>

<p>And the full experience:</p>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7749724/e2d07ed6-ffcf-11e4-93cd-f307718c2c82.png" alt="KTOMG browser" /></p>

<p>When you&rsquo;re the only one managing a bunch of apps, this
is a real productivity booster. You could even go as far as
creating separate profiles for each environment, if you like. Hell, this doesn&rsquo;t have to be for apps, it could be for whatever browsing contexts you want to separate.</p>

<p>Just make sure you have enough RAM because Chrome will
suck it all up.</p>

<p><img src="https://cloud.githubusercontent.com/assets/563819/7749876/db3a810c-ffd0-11e4-8a35-5d96e41b874f.png" alt="Task manager" /></p>

<p>Dumb puny laptop.</p>

<p>Hope this helps! Happy managing.</p>
]]></content>
  </entry>
  
</feed>
