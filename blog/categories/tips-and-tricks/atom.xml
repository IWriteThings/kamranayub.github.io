<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips & Tricks | Kamranicus]]></title>
  <link href="http://kamranicus.com/blog/categories/tips-and-tricks/atom.xml" rel="self"/>
  <link href="http://kamranicus.com/"/>
  <updated>2016-02-22T05:51:15+00:00</updated>
  <id>http://kamranicus.com/</id>
  <author>
    <name><![CDATA[Kamran]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PowerShell Script to Generate an HTML5 Offline Manifest]]></title>
    <link href="http://kamranicus.com/blog/2015/09/17/powershell-html5-offline-manifest/"/>
    <updated>2015-09-17T02:40:00+00:00</updated>
    <id>http://kamranicus.com/blog/2015/09/17/powershell-html5-offline-manifest</id>
    <content type="html"><![CDATA[<p>In my new role at work I&rsquo;ve been learning PowerShell to administrate our systems (I&rsquo;m a half developer, half sys admin monster). I&rsquo;ve been a developer for a long time and been living in .NET for about as long&mdash;I still had not really <em>embraced</em> PowerShell as something I could use in my daily development routine. I&rsquo;ve changed my tune. <strong>PowerShell is awesome.</strong> It&rsquo;s also not too hard to pick up once you learn how it works. I recommend you take a serious look at learning it. I recommend <a href="https://www.microsoftvirtualacademy.com/en-us/training-courses/getting-started-with-powershell-3-0-jump-start-8276">following the PowerShell 3 Jumpstart course</a> and trial and error.</p>

<p>Anyway, for some of the games we write as part of <a href="http://excaliburjs.com">Excalibur.js</a> for game jams we would like to run them offline. To do this, you need to create an <a href="http://www.html5rocks.com/en/tutorials/appcache/beginner/">HTML5 Application Manifest file</a>. However, this file is super finicky, as outlined in the linked article. In order to assist, I wrote a small PowerShell script that generates an <code>appcache</code> manifest file with each file&rsquo;s MD5 checksum. Therefore, the manifest file will only change when dependent assets change. I do some more work to disable it locally and only enable for release, but you can run this script as part of your build.</p>

<script src="https://gist.github.com/kamranayub/cc2c4d371a83aec8279e.js"></script>


<p>Modify the script to be specific to your project and it should output an appropriate manifest file. Feel free to change as you see fit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Special Gmail Addresses to Redirect and Filter Incoming Mail or Bypass Unique Email Checks]]></title>
    <link href="http://kamranicus.com/blog/2015/07/29/gmail-special-address/"/>
    <updated>2015-07-29T04:23:00+00:00</updated>
    <id>http://kamranicus.com/blog/2015/07/29/gmail-special-address</id>
    <content type="html"><![CDATA[<p>If you have a Gmail account, there&rsquo;s a sweet feature you might not know about.</p>

<p>Let&rsquo;s say your email is:</p>

<p><code>johndoe@gmail.com</code></p>

<p>First tip: adding dots (.) does not change the email. The following emails are identical to Google and will route email to <code>johndoe@gmail.com</code>:</p>

<ul>
<li><code>john.doe@gmail.com</code></li>
<li><code>john....doe@gmail.com</code></li>
<li>etc.</li>
</ul>


<p>Next tip: you can add a plus sign to the end of your email and then type in whatever you want. It&rsquo;ll <em>still</em> get sent to you. You can use this to your advantage by filtering mail sent to that specific tagged address or you can bypass &ldquo;unique email&rdquo; checks on websites but still get email sent to you:</p>

<ul>
<li><code>johndoe+medium.com@gmail.com</code></li>
<li><code>johndoe+microsoft.com@gmail.com</code></li>
<li><code>johndoe+spam@gmail.com</code></li>
</ul>


<p>So you could filter incoming mail based on those addresses above. This comes in really handy for sites you don&rsquo;t care about but still need at least one email from them&mdash;the rest can be filtered. It can also be useful to identify spam email sources&mdash;who leaked your email? If you saw spam addressed to <code>johndoe+spamsite@gmail.com</code>, you know <code>spamsite</code> was responsible for leaking/sharing your email.</p>

<p>Happy power-Gmailing!</p>
]]></content>
  </entry>
  
</feed>
